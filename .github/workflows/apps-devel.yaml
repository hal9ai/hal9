name: Apps

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/apps*
      - apps/**

jobs:
  devel:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: '3.10'

    - name: Install Hal9
      run: pip install hal9

    - uses: actions/checkout@v1
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v45
      with:
        since_last_remote_commit: true

    - name: Deploy changed apps
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        HAL9_TOKEN: ${{ secrets.HAL9_TOKEN_DEVEL }}
      run: |
        for file in ${ALL_CHANGED_FILES}; do
          echo "$file was changed"
          if [[ "$file" == apps/flux/* ]]; then
            hal9 deploy apps/flux --name flux --access public --url https://api.devel.hal9.com --title Flux --description "Photorealistic content creation";
          elif [[ "$file" == apps/echo/* ]]; then
            hal9 deploy apps/echo --name ECHO --access public --url https://api.devel.hal9.com --title Echo --description "Echoes user input";
          elif [[ "$file" == apps/hal9/* ]]; then
            hal9 deploy apps/hal9 --name hal9 --access public --url https://api.devel.hal9.com --title Hal9 --description "Conversations and content creation";
          elif [[ "$file" == apps/browser/* ]]; then
            hal9 deploy apps/browser --name browser --access unlisted --url https://api.devel.hal9.com --title Browser --description "Capable of browsing the web";
          elif [[ "$file" == apps/openai/* ]]; then
            hal9 deploy apps/openai --name openai --access public --url https://api.devel.hal9.com --title OpenAI --description "Makes use of OpenAI O1";
          elif [[ "$file" == apps/swarm/* ]]; then
            hal9 deploy apps/swarm --name swarm --access public --url https://api.devel.hal9.com --title Swarm --description "Makes use of OpenAI Swarm";
          elif [[ "$file" == apps/deepseek/* ]]; then
            hal9 deploy apps/deepseek --name deepseek --access public --url https://api.devel.hal9.com --title DeepSeek --description "Makes use of DeepSeek";
          fi
        done