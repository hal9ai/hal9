name: R

on:
  push:
    paths:
      - r/**
      - server/**
      - .github/workflows/r.yaml

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy Prepare
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo "DEPLOY_URL=r" >> $GITHUB_ENV
      - name: Deploy Commit
        run: |
          echo "SHORT_SHA=${SHORT_SHA}"
          echo "DEPLOY_URL=commits/${SHORT_SHA}/r" >> $GITHUB_ENV
        if: github.ref != 'refs/heads/main'
      - name: Deploy URL
        run: echo "DEPLOY_URL=${DEPLOY_URL}"
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: ./r
      - name: Install Hal9
        run: |
          Rscript -e 'install.packages("devtools")'
          Rscript -e 'devtools::build()'
          Rscript -e 'devtools::install()'
        working-directory: ./r
      - name: Render pkgdown
        run: |
          Rscript -e 'install.packages("pkgdown")'
          Rscript -e 'pkgdown::build_site("./r")'
      - uses: zdurham/s3-upload-github-action@master
        with:
          args: --recursive --acl public-read
        env:
          FILE: './r/docs'
          AWS_REGION: 'us-west-2'
          S3_BUCKET: 'notebooks.hal9.com'
          S3_KEY: ${{ env.DEPLOY_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  test:
    runs-on: ${{ matrix.config.os }}

    name: test (${{ matrix.config.os }} ${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # - {os: ubuntu-18.04,   r: 'release'}
          # - {os: ubuntu-18.04,   r: 'devel', http-user-agent: 'release'}
          # - {os: ubuntu-18.04,   r: 'oldrel-1'}
          # - {os: ubuntu-18.04,   r: 'oldrel-2'}
          # - {os: ubuntu-18.04,   r: 'oldrel-3'}
          # - {os: ubuntu-18.04,   r: 'oldrel-4'}
          - {os: macOS-latest,   r: 'release'}
          # - {os: windows-latest, r: 'release'}
          # - {os: windows-latest, r: '3.6'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
      - uses: r-lib/actions/setup-pandoc@v2
      - name: Install xquartz
        if: runner.os == 'macOS'
        run: brew install --cask xquartz
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: r
          extra-packages: any::rcmdcheck
          needs: check
      - uses: r-lib/actions/check-r-package@v2
        with:
          working-directory: r
          error-on: '"never"'