TARGET = $(subst 64,x86_64,$(subst 32,i686,$(WIN)))-pc-windows-gnu

# This is provided in Makevars.ucrt for R >= 4.2
TOOLCHAIN ?= stable-gnu

TARGET_DIR = ./rust/target
LIBDIR = $(TARGET_DIR)/$(TARGET)/release
STATLIB = $(LIBDIR)/libhal9.a
PKG_LIBS = -L$(LIBDIR) -lhal9 -lws2_32 -ladvapi32 -luserenv -lbcrypt -lntdll -lNcrypt -lgcrypt -lsecur32 -lcrypt32 -lole32

all: C_clean

$(SHLIB): $(STATLIB)

$(STATLIB):
	mkdir -p $(TARGET_DIR)/libgcc_mock
	cd $(TARGET_DIR)/libgcc_mock && \
		touch gcc_mock.c && \
		gcc -c gcc_mock.c -o gcc_mock.o && \
		ar -r libgcc_eh.a gcc_mock.o && \
		cp libgcc_eh.a libgcc_s.a

	# CARGO_LINKER is provided in Makevars.ucrt for R >= 4.2
	export CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER="$(CARGO_LINKER)" && \
		export LIBRARY_PATH="$${LIBRARY_PATH};$(CURDIR)/$(TARGET_DIR)/libgcc_mock" && \
		cargo +$(TOOLCHAIN) rustc --target=$(TARGET) -F extendr --lib --crate-type staticlib --release --manifest-path=./rust/Cargo.toml --target-dir $(TARGET_DIR)

C_clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS)

clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS) rust/target
